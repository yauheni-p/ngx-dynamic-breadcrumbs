{"version":3,"file":"ngx-dynamic-breadcrumbs.umd.js","sources":["../../src/lib/breadcrumbs.service.ts","../../src/lib/default-divider/default-divider.component.ts","../../src/lib/breadcrumbs.component.ts","../../src/lib/breadcrumbs.module.ts","../../src/ngx-dynamic-breadcrumbs.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Breadcrumb } from './breadcrumb';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BreadcrumbsService {\r\n  private breadcrumbs: BehaviorSubject<Array<Breadcrumb>> = new BehaviorSubject(\r\n    null\r\n  );\r\n\r\n  get(): Observable<Array<Breadcrumb>> {\r\n    return this.breadcrumbs.asObservable();\r\n  }\r\n\r\n  set(breadcrumbs: Array<Breadcrumb>): void {\r\n    this.breadcrumbs.next(breadcrumbs);\r\n  }\r\n\r\n  clear(): void {\r\n    this.breadcrumbs.next(null);\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'breadcrumbs-default-divider',\n  templateUrl: './default-divider.component.html',\n  styleUrls: ['./default-divider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DefaultDividerComponent {\n\n}\n","import { Component, Inject, InjectionToken, Input, Optional, Type } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Breadcrumb } from './breadcrumb';\r\nimport { BreadcrumbsService } from './breadcrumbs.service';\r\nimport { DefaultDividerComponent } from './default-divider/default-divider.component';\r\n\r\nexport interface BreadcrumbsDefaultOptions {\r\n  dividerComponent: Type<any>;\r\n}\r\n\r\nexport const BREADCRUMBS_DEFAULT_OPTIONS\r\n  = new InjectionToken<BreadcrumbsDefaultOptions>('BREADCRUMBS_DEFAULT_OPTIONS');\r\n\r\n@Component({\r\n  selector: 'breadcrumbs-container',\r\n  templateUrl: './breadcrumbs.component.html',\r\n  styleUrls: ['./breadcrumbs.component.scss']\r\n})\r\nexport class BreadcrumbsComponent {\r\n  @Input()\r\n  dividerComponent: Type<any> = DefaultDividerComponent;\r\n\r\n  menuItems$: Observable<Array<Breadcrumb>> = this.service.get();\r\n\r\n  constructor(\r\n    private service: BreadcrumbsService,\r\n    @Optional() @Inject(BREADCRUMBS_DEFAULT_OPTIONS) defaults?: BreadcrumbsDefaultOptions\r\n  ) {\r\n    if (defaults && defaults.dividerComponent) {\r\n      this.dividerComponent = defaults.dividerComponent;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreadcrumbsComponent } from './breadcrumbs.component';\nimport { RouterModule } from '@angular/router';\nimport { DefaultDividerComponent } from './default-divider/default-divider.component';\n\n@NgModule({\n  declarations: [BreadcrumbsComponent, DefaultDividerComponent],\n  imports: [CommonModule, RouterModule],\n  exports: [BreadcrumbsComponent]\n})\nexport class BreadcrumbsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {DefaultDividerComponent as Éµa} from './lib/default-divider/default-divider.component';"],"names":["BehaviorSubject","Injectable","Component","ChangeDetectionStrategy","InjectionToken","Optional","Inject","Input","NgModule","CommonModule","RouterModule"],"mappings":";;;;;;;QAIA;YAIU,gBAAW,GAAuC,IAAIA,oBAAe,CAC3E,IAAI,CACL,CAAC;SAaH;QAXC,gCAAG,GAAH;YACE,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;SACxC;QAED,gCAAG,GAAH,UAAI,WAA8B;YAChC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACpC;QAED,kCAAK,GAAL;YACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC7B;;;;;gBAlBFC,aAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;QCED;;;;;gBANCC,YAAS,SAAC;oBACT,QAAQ,EAAE,6BAA6B;oBACvC,iNAA+C;oBAE/C,eAAe,EAAEC,0BAAuB,CAAC,MAAM;;iBAChD;;;QCGY,2BAA2B,GACpC,IAAIC,iBAAc,CAA4B,6BAA6B,EAAE;;QAa/E,8BACU,OAA2B,EACc,QAAoC;YAD7E,YAAO,GAAP,OAAO,CAAoB;YALrC,qBAAgB,GAAc,uBAAuB,CAAC;YAEtD,eAAU,GAAkC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;YAM7D,IAAI,QAAQ,IAAI,QAAQ,CAAC,gBAAgB,EAAE;gBACzC,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC;aACnD;SACF;;;;gBAlBFF,YAAS,SAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,uhBAA2C;;iBAE5C;;;gBAdQ,kBAAkB;gDAuBtBG,WAAQ,YAAIC,SAAM,SAAC,2BAA2B;;;mCAPhDC,QAAK;;;;QCRR;;;;;gBALCC,WAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,oBAAoB,EAAE,uBAAuB,CAAC;oBAC7D,OAAO,EAAE,CAACC,mBAAY,EAAEC,mBAAY,CAAC;oBACrC,OAAO,EAAE,CAAC,oBAAoB,CAAC;iBAChC;;;ICVD;;;;;;;;;;;;;;;;"}